# import pandas as pd

# def calculate_at_least_percentage_occurrences(filepath, column_name, days, thresholds):
#     # Determine reader type
#     if filepath.endswith('.csv'):
#         df = pd.read_csv(filepath)
#     elif filepath.endswith('.xlsx'):
#         df = pd.read_excel(filepath)
#     else:
#         raise ValueError("Unsupported file format. Use .csv or .xlsx")

#     prices = df[column_name].tolist()
#     total_windows = 0
#     occurrences = {t: 0 for t in thresholds}

#     for i in range(len(prices) - days):
#         start_price = prices[i]
#         found_thresholds = set()

#         for j in range(1, days + 1):
#             end_price = prices[i + j]
#             pct_change = ((end_price - start_price) / start_price) * 100

#             for threshold in thresholds:
#                 if threshold >= 0:
#                     if pct_change >= threshold and threshold not in found_thresholds:
#                         occurrences[threshold] += 1
#                         found_thresholds.add(threshold)
#                 else:
#                     if pct_change <= threshold and threshold not in found_thresholds:
#                         occurrences[threshold] += 1
#                         found_thresholds.add(threshold)

#         total_windows += 1

#     result = {t: (occurrences[t] / total_windows) * 100 for t in thresholds}
#     return result

# # === Example Usage ===
# if __name__ == "__main__":
#     filepath = "/Users/paulrmunley/Downloads/Oct 2017 - Feb 2018 BTC.xlsx"  # Update this
#     column_name = "price"
#     rolling_days = 8
#     thresholds = [134.23, 75.67, 52.25, 40.54, 28.83, 22.97, 17.11, 11.26,
#                   -12.16, -18.02, -29.73, -41.44, -53.15]

#     results = calculate_at_least_percentage_occurrences(filepath, column_name, rolling_days, thresholds)

#     for threshold, pct in sorted(results.items(), key=lambda x: -x[0]):  # Show highest thresholds first
#         print(f"{threshold:+.2f}% change or more: {pct:.2f}% of the time")